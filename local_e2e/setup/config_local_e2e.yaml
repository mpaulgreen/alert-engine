server:
  host: "0.0.0.0"
  port: 8080
  read_timeout: 30s
  write_timeout: 30s
  idle_timeout: 60s

logging:
  level: "info"
  format: "json"
  output: "stdout"

redis:
  address: "127.0.0.1:6379"
  password: ""
  database: 0
  cluster_mode: false
  max_retries: 3
  pool_size: 10
  min_idle_conns: 5
  dial_timeout: "10s"
  read_timeout: "5s"
  write_timeout: "5s"
  pool_timeout: "10s"
  idle_timeout: "5m"

kafka:
  brokers:
    - "127.0.0.1:9094"
  topic: "application-logs"
  group_id: "alert-engine-e2e-fresh-20250716"
  consumer:
    min_bytes: 1024
    max_bytes: 1048576
    max_wait: "2s"
    start_offset: -2
  producer:
    acks: "all"
    retries: 3
    batch_size: 16384
    linger_ms: 10
    buffer_memory: 33554432
    compression_type: "snappy"

# CRITICAL: Log processing configuration
log_processing:
  enabled: true
  batch_size: 50
  flush_interval: "10s"
  max_message_size: 1048576
  validation:
    require_timestamp: true
    require_level: true
    require_message: true
    require_namespace: false  # More lenient for E2E testing
    default_log_level: "INFO"  # Default level for missing log levels

# CRITICAL: Alert processing configuration  
alerting:
  evaluation_interval: 10s
  max_concurrent_evaluations: 10
  rule_cache_ttl: 300s
  alert_history_retention: 7200s
  enabled: true
  batch_size: 50
  flush_interval: "10s"
  max_rules: 1000
  default_time_window: "5m"
  default_threshold: 1  # Lower threshold for testing
  cleanup_interval: "1h"

# CRITICAL: Notification settings
notifications:
  enabled: true
  max_retries: 3
  retry_delay: "5s"
  timeout: "30s"
  rate_limit_per_min: 60
  batch_size: 5
  batch_delay: "2s"
  enable_deduplication: true
  deduplication_window: "5m"
  
  # Slack notification configuration
  slack:
    webhook_url: ""           # Set via environment variable SLACK_WEBHOOK_URL
    channel: "#test-mp-channel"
    username: "Alert Engine (E2E)"
    icon_emoji: ":warning:"
    timeout: 30s
    retry_attempts: 3
    retry_delay: 2s
  
  # Configurable alert message template
  templates:
    alert_message: |
      ðŸš¨ Alert: {{.RuleName}}
      Service: {{.Service}}
      Namespace: {{.Namespace}}
      Level: {{.Level}}
      Count: {{.Count}} in {{.TimeWindow}}
      Message: {{.Message}}
    
    slack_alert_title: "{{.SeverityEmoji}} {{.RuleName}}"
    
    slack_alert_fields:
      - title: "Severity"
        value: "{{.Severity}}"
        short: true
      - title: "Namespace" 
        value: "{{.Namespace}}"
        short: true
      - title: "Service"
        value: "{{.Service}}"
        short: true
      - title: "Pod"
        value: "{{.Pod}}"
        short: true
      - title: "Log Level"
        value: "{{.Level}}"
        short: true
      - title: "Count"
        value: "{{.Count}}"
        short: true

  # Configurable severity mappings
  severity:
    emojis:
      critical: "ðŸ”´"
      high: "ðŸŸ "
      medium: "ðŸŸ¡"
      low: "ðŸŸ¢"
      default: "âšª"
    
    colors:
      critical: "#ff0000"
      high: "#ff8000"
      medium: "#ffff00"
      low: "#00ff00"
      default: "#808080"

# Default rules configuration for E2E testing
default_rules:
  enabled: true
  rules:
    - id: "e2e-test-error-alert"
      name: "E2E Test - Application Error Alert"
      description: "Alert on application errors (E2E testing)"
      enabled: true
      conditions:
        log_level: "ERROR"
        threshold: 1          # Very low threshold for E2E testing
        time_window: "2m"     # Shorter window for E2E testing
        operator: "gte"
      actions:
        channel: "#test-mp-channel"
        severity: "high"

    - id: "e2e-test-alert-engine-logs"
      name: "E2E Test - Alert Engine Namespace Logs" 
      description: "Alert on alert-engine namespace activity"
      enabled: true
      conditions:
        namespace: "alert-engine"
        log_level: "ERROR"
        threshold: 1          # Very low threshold for testing
        time_window: "1m"     # Short window for testing
        operator: "gte"
      actions:
        channel: "#test-mp-channel"
        severity: "medium"

    - id: "e2e-test-continuous-log-alerts"
      name: "E2E Test - Continuous Log Generator Alerts"
      description: "Alert on continuous log generator errors"
      enabled: true
      conditions:
        service: "continuous-log-generator"
        log_level: "ERROR"
        threshold: 1          # Very low threshold for testing
        time_window: "3m"
        operator: "gte"
      actions:
        channel: "#test-mp-channel"
        severity: "medium"

# Consumer defaults aligned with main configuration
consumer_defaults:
  brokers:
    - "127.0.0.1:9094"
  topic: "application-logs"
  group_id: "alert-engine-e2e-fresh-20250716"
  min_bytes: 1024
  max_bytes: 1048576
  max_wait: "2s"
  start_offset: -2

metrics:
  enabled: true
  path: "/metrics"
  port: 9090

health:
  path: "/health"
  timeout: 5s

# E2E Testing specific configuration
e2e:
  test_mode: true
  log_retention: 3600s  # 1 hour for testing
  alert_retention: 1800s  # 30 minutes for testing
  cleanup_interval: 300s  # 5 minutes cleanup 