{
  "alerts": [
    {
      "id": "alert-001",
      "rule_id": "rule-001",
      "rule_name": "High Error Rate",
      "severity": "critical",
      "count": 15,
      "timestamp": "2024-01-15T10:30:00Z",
      "log_entry": {
        "timestamp": "2024-01-15T10:30:00Z",
        "level": "ERROR",
        "message": "Database connection failed: connection timeout after 30s",
        "kubernetes": {
          "namespace": "production",
          "pod": "api-server-abc123",
          "container": "api-server",
          "labels": {
            "app": "api-server",
            "version": "v1.2.3",
            "environment": "production"
          }
        },
        "host": "node-1"
      }
    },
    {
      "id": "alert-002", 
      "rule_id": "rule-002",
      "rule_name": "Memory Usage High",
      "severity": "high",
      "count": 8,
      "timestamp": "2024-01-15T10:35:00Z",
      "log_entry": {
        "timestamp": "2024-01-15T10:35:00Z",
        "level": "WARN",
        "message": "Memory usage exceeds 80% threshold",
        "kubernetes": {
          "namespace": "monitoring",
          "pod": "prometheus-xyz789",
          "container": "prometheus",
          "labels": {
            "app": "prometheus",
            "version": "v2.40.0",
            "environment": "production"
          }
        },
        "host": "node-2"
      }
    },
    {
      "id": "alert-003",
      "rule_id": "rule-003", 
      "rule_name": "Slow Response Time",
      "severity": "medium",
      "count": 3,
      "timestamp": "2024-01-15T10:40:00Z",
      "log_entry": {
        "timestamp": "2024-01-15T10:40:00Z",
        "level": "INFO",
        "message": "Response time exceeded 2000ms for /api/users endpoint",
        "kubernetes": {
          "namespace": "api",
          "pod": "web-service-def456",
          "container": "web-service",
          "labels": {
            "app": "web-service",
            "version": "v3.1.0",
            "environment": "staging"
          }
        },
        "host": "node-3"
      }
    },
    {
      "id": "alert-004",
      "rule_id": "rule-004",
      "rule_name": "Disk Space Low",
      "severity": "low",
      "count": 1,
      "timestamp": "2024-01-15T10:45:00Z",
      "log_entry": {
        "timestamp": "2024-01-15T10:45:00Z",
        "level": "DEBUG",
        "message": "Disk usage at 75% on /var/log partition",
        "kubernetes": {
          "namespace": "logging",
          "pod": "filebeat-ghi123",
          "container": "filebeat",
          "labels": {
            "app": "filebeat",
            "version": "v8.5.0",
            "environment": "development"
          }
        },
        "host": "node-4"
      }
    }
  ],
  "slack_messages": [
    {
      "name": "critical_alert_message",
      "channel": "#alerts",
      "username": "Alert Engine",
      "icon_emoji": ":warning:",
      "text": "Alert triggered for rule: *High Error Rate*",
      "attachments": [
        {
          "color": "#ff0000",
          "title": "ðŸ”´ High Error Rate",
          "text": "```Database connection failed: connection timeout after 30s```",
          "fields": [
            {
              "title": "Severity",
              "value": "CRITICAL",
              "short": true
            },
            {
              "title": "Namespace",
              "value": "production",
              "short": true
            },
            {
              "title": "Service",
              "value": "api-server",
              "short": true
            },
            {
              "title": "Pod",
              "value": "api-server-abc123",
              "short": true
            },
            {
              "title": "Log Level",
              "value": "ERROR",
              "short": true
            },
            {
              "title": "Count",
              "value": "15",
              "short": true
            }
          ],
          "footer": "Alert Engine",
          "footer_icon": ":warning:",
          "ts": 1705314600
        }
      ]
    },
    {
      "name": "test_connection_message",
      "channel": "#alerts",
      "username": "Alert Engine",
      "icon_emoji": ":warning:",
      "text": "Test message from Alert Engine",
      "attachments": [
        {
          "color": "#36a64f",
          "title": "Connection Test",
          "text": "If you can see this message, the Slack integration is working correctly!",
          "fields": [
            {
              "title": "Status",
              "value": "âœ… Connected",
              "short": true
            },
            {
              "title": "Timestamp",
              "value": "2024-01-15T10:30:00Z",
              "short": true
            }
          ]
        }
      ]
    },
    {
      "name": "simple_message",
      "channel": "#alerts",
      "username": "Alert Engine",
      "icon_emoji": ":warning:",
      "text": "System maintenance starting in 5 minutes"
    }
  ],
  "configurations": [
    {
      "name": "default_config",
      "webhook_url": "https://hooks.slack.com/services/T123456/B123456/XXXXXXXXXXXXXXXXXXXXXXXX",
      "channel": "#alerts",
      "username": "Alert Engine",
      "icon_emoji": ":warning:",
      "enabled": true,
      "config": {
        "enabled": true,
        "max_retries": 3,
        "retry_delay": "5s",
        "timeout": "30s",
        "rate_limit_per_min": 60,
        "batch_size": 10,
        "batch_delay": "1s",
        "enable_deduplication": true,
        "deduplication_window": "5m"
      }
    },
    {
      "name": "test_config",
      "webhook_url": "https://hooks.slack.com/services/TEST/TEST/TESTXXXXXXXXXXXXXXXXXX",
      "channel": "#test-alerts",
      "username": "Test Alert Bot",
      "icon_emoji": ":robot_face:",
      "enabled": true,
      "config": {
        "enabled": true,
        "max_retries": 1,
        "retry_delay": "1s",
        "timeout": "10s",
        "rate_limit_per_min": 10,
        "batch_size": 5,
        "batch_delay": "500ms",
        "enable_deduplication": false,
        "deduplication_window": "1m"
      }
    },
    {
      "name": "invalid_config",
      "webhook_url": "invalid-url",
      "channel": "invalid-channel",
      "username": "",
      "icon_emoji": "",
      "enabled": false,
      "config": {
        "enabled": false,
        "max_retries": -1,
        "retry_delay": "0s",
        "timeout": "0s",
        "rate_limit_per_min": 0,
        "batch_size": 0,
        "batch_delay": "0s",
        "enable_deduplication": false,
        "deduplication_window": "0s"
      }
    }
  ],
  "error_scenarios": [
    {
      "name": "network_timeout",
      "description": "Simulates network timeout when sending to Slack",
      "http_status": 0,
      "error_message": "context deadline exceeded",
      "delay": "35s"
    },
    {
      "name": "slack_rate_limit",
      "description": "Simulates Slack rate limiting",
      "http_status": 429,
      "error_message": "Too Many Requests",
      "response_body": "rate_limited",
      "retry_after": "60"
    },
    {
      "name": "slack_server_error",
      "description": "Simulates Slack server error",
      "http_status": 500,
      "error_message": "Internal Server Error",
      "response_body": "server_error"
    },
    {
      "name": "slack_bad_request",
      "description": "Simulates invalid webhook URL or payload",
      "http_status": 400,
      "error_message": "Bad Request",
      "response_body": "invalid_payload"
    },
    {
      "name": "slack_forbidden",
      "description": "Simulates invalid webhook credentials",
      "http_status": 403,
      "error_message": "Forbidden",
      "response_body": "invalid_token"
    },
    {
      "name": "slack_not_found",
      "description": "Simulates webhook URL not found",
      "http_status": 404,
      "error_message": "Not Found",
      "response_body": "channel_not_found"
    }
  ],
  "test_scenarios": [
    {
      "name": "single_alert",
      "description": "Send single alert notification",
      "alerts": ["alert-001"],
      "expected_messages": 1
    },
    {
      "name": "multiple_alerts",
      "description": "Send multiple alert notifications",
      "alerts": ["alert-001", "alert-002", "alert-003"],
      "expected_messages": 3
    },
    {
      "name": "batch_alerts",
      "description": "Send batch of alerts with different severities",
      "alerts": ["alert-001", "alert-002", "alert-003", "alert-004"],
      "expected_messages": 4,
      "batch_size": 2
    },
    {
      "name": "connection_test",
      "description": "Test Slack connection without alerts",
      "alerts": [],
      "expected_messages": 1,
      "test_connection": true
    },
    {
      "name": "rate_limit_test",
      "description": "Test rate limiting with many alerts",
      "alerts": ["alert-001", "alert-002", "alert-003", "alert-004"],
      "expected_messages": 4,
      "rate_limit": 2,
      "expected_delays": 2
    },
    {
      "name": "error_handling",
      "description": "Test error handling and retries",
      "alerts": ["alert-001"],
      "expected_messages": 1,
      "simulate_error": "network_timeout",
      "expected_retries": 3
    },
    {
      "name": "message_formatting",
      "description": "Test different message formats",
      "alerts": ["alert-001", "alert-002", "alert-003", "alert-004"],
      "expected_messages": 4,
      "validate_formatting": true
    }
  ],
  "performance_scenarios": [
    {
      "name": "throughput_test",
      "description": "Test notification throughput",
      "alert_count": 100,
      "concurrent_workers": 5,
      "expected_duration": "10s",
      "expected_success_rate": 0.95
    },
    {
      "name": "burst_test",
      "description": "Test burst notification handling",
      "alert_count": 50,
      "burst_duration": "1s",
      "expected_duration": "5s",
      "expected_success_rate": 0.90
    },
    {
      "name": "sustained_load",
      "description": "Test sustained notification load",
      "alert_count": 1000,
      "concurrent_workers": 10,
      "expected_duration": "60s",
      "expected_success_rate": 0.98
    }
  ],
  "validation_rules": [
    {
      "name": "webhook_url_validation",
      "description": "Webhook URL must be valid Slack webhook format",
      "pattern": "^https://hooks\\.slack\\.com/services/[A-Z0-9]+/[A-Z0-9]+/[a-zA-Z0-9]+$"
    },
    {
      "name": "channel_validation",
      "description": "Channel must start with # or @",
      "pattern": "^[#@].+"
    },
    {
      "name": "username_validation",
      "description": "Username must not be empty",
      "min_length": 1
    },
    {
      "name": "severity_validation",
      "description": "Severity must be one of the allowed values",
      "allowed_values": ["critical", "high", "medium", "low"]
    },
    {
      "name": "message_length_validation",
      "description": "Message must not exceed Slack limits",
      "max_length": 4000
    }
  ]
} 