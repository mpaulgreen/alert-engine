# Alert Engine Configuration - Local + OpenShift Setup
# Updated for connecting to OpenShift infrastructure

# Server configuration
server:
  address: ":8080"
  read_timeout: "30s"
  write_timeout: "30s" 
  idle_timeout: "60s"

# Redis configuration (via port-forward to OpenShift)
redis:
  # Using port-forward to OpenShift Redis cluster
  address: "localhost:6379"
  password: ""
  database: 0
  cluster_mode: false  # Disable cluster mode for local port-forwarding
  max_retries: 3
  pool_size: 10
  min_idle_conns: 5
  dial_timeout: "10s"  # Increased for network latency
  read_timeout: "5s"   # Increased for network latency
  write_timeout: "5s"  # Increased for network latency
  pool_timeout: "10s"  # Increased for network latency
  idle_timeout: "5m"

# Kafka configuration (via port-forward to OpenShift)
kafka:
  brokers:
    - "localhost:9092"  # Port-forwarded to OpenShift Kafka
  topic: "application-logs"
  group_id: "alert-engine-local-group"  # Unique group for local testing
  consumer:
    min_bytes: 1024         # Smaller for testing
    max_bytes: 1048576      # 1MB
    max_wait: "2s"          # Increased for network latency
    start_offset: -1        # Latest offset
  producer:
    batch_size: 50          # Smaller for testing
    batch_timeout: "2s"     # Increased for network latency

# Slack notification configuration
slack:
  webhook_url: ""           # Set via environment variable SLACK_WEBHOOK_URL
  channel: "#test-mp-channel"
  username: "Alert Engine (Local)"
  icon_emoji: ":warning:"
  timeout: "30s"

# Notification settings
notifications:
  enabled: true
  max_retries: 3
  retry_delay: "5s"
  timeout: "30s"
  rate_limit_per_min: 60
  batch_size: 5             # Smaller for testing
  batch_delay: "2s"
  enable_deduplication: true
  deduplication_window: "5m"

# Alert processing configuration
alerting:
  enabled: true
  batch_size: 50            # Smaller for testing
  flush_interval: "10s"     # More frequent for testing
  max_rules: 1000
  default_time_window: "5m"
  default_threshold: 3      # Lower threshold for testing
  cleanup_interval: "1h"

# Log processing configuration
log_processing:
  enabled: true
  batch_size: 50            # Smaller for testing
  flush_interval: "10s"     # More frequent for testing
  max_message_size: 1048576 # 1MB
  validation:
    require_timestamp: true
    require_level: true
    require_message: true
    require_namespace: true

# Monitoring and metrics
monitoring:
  enabled: true
  metrics_port: 8081
  health_check_interval: "30s"
  log_level: "debug"        # Debug for local development
  enable_pprof: true        # Enable profiling for local dev

# Test alert rules for local development
default_rules:
  enabled: true
  rules:
    - id: "local-test-error-alert"
      name: "Local Test - Application Error Alert"
      description: "Alert on application errors (local testing)"
      enabled: true
      conditions:
        log_level: "ERROR"
        threshold: 2          # Lower threshold for testing
        time_window: "2m"     # Shorter window for testing
        operator: "gt"
      actions:
        channel: "#alerts"
        severity: "high"

    - id: "local-test-alert-engine-logs"
      name: "Local Test - Alert Engine Namespace Logs" 
      description: "Alert on alert-engine namespace activity"
      enabled: true
      conditions:
        namespace: "alert-engine"
        log_level: "ERROR"
        threshold: 1          # Very low threshold for testing
        time_window: "1m"     # Short window for testing
        operator: "gt"
      actions:
        channel: "#alerts"
        severity: "medium"

    - id: "local-test-continuous-log-alerts"
      name: "Local Test - Continuous Log Generator Alerts"
      description: "Alert on continuous log generator errors"
      enabled: true
      conditions:
        service: "continuous-log-generator"
        log_level: "ERROR"
        threshold: 3          # Moderate threshold
        time_window: "3m"
        operator: "gt"
      actions:
        channel: "#alerts"
        severity: "medium"

# Security configuration
security:
  enable_cors: true
  cors_origins: ["*"]
  enable_auth: false        # Disable for local development
  api_key: ""

# Performance tuning (relaxed for local development)
performance:
  max_concurrent_rules: 50
  rule_evaluation_timeout: "2s"
  max_memory_usage: "256Mi"
  gc_percentage: 100

# Logging configuration
logging:
  level: "debug"            # Debug for local development
  format: "text"            # Text format for easier reading locally
  output: "stdout"
  file:
    path: "/tmp/alert-engine-local.log"
    max_size: "10MB"
    max_backups: 3
    max_age: "7d"
    compress: true

# Environment-specific overrides
env_overrides:
  development:
    logging:
      level: "debug"
    monitoring:
      enable_pprof: true
    alerting:
      default_threshold: 1  # Very sensitive for testing
  
  production:
    logging:
      level: "warn"
    performance:
      max_memory_usage: "1Gi"
    kafka:
      brokers:
        - "alert-kafka-cluster-kafka-bootstrap.amq-streams-kafka.svc.cluster.local:9092"
    redis:
      address: "redis-cluster-access.redis-cluster.svc.cluster.local:6379"
    
  test:
    logging:
      level: "error"
    kafka:
      topic: "test-application-logs"
    redis:
      database: 1 