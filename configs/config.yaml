# Alert Engine Configuration - Organized by Implementation Status
# This configuration file separates currently implemented features from future considerations

# ============================================================================
# OPENSHIFT PRODUCTION DEPLOYMENT CONFIGURATION
# ============================================================================
# This configuration is for deploying Alert Engine on OpenShift using the
# infrastructure components set up in alert_engine_infra_setup.md

# Production OpenShift Deployment (Use this for actual deployment)
server:
  host: "0.0.0.0"          # Container bind address
  port: 8080               # Container port (matches service definition)

redis:
  address: "redis-cluster-access.redis-cluster.svc.cluster.local:6379"  # Redis cluster service
  password: ""             # No password for internal cluster access  
  cluster_mode: true       # CRITICAL: Enable for Redis cluster
  # Connection timeout settings for OpenShift environment
  dial_timeout: "15s"      # Connection timeout for Redis
  read_timeout: "10s"      # Read timeout for Redis operations
  write_timeout: "10s"     # Write timeout for Redis operations

kafka:
  brokers:
    - "alert-kafka-cluster-kafka-bootstrap.amq-streams-kafka.svc.cluster.local:9092"  # AMQ Streams Kafka
  topic: "application-logs"  # Topic created in infrastructure setup
  group_id: "alert-engine-production-group"  # Production group ID
  # Connection timeout settings for OpenShift environment - try common Go client parameter names
  timeout: "30s"               # General timeout
  net:
    dial_timeout: "15s"        # Network dial timeout
    read_timeout: "10s"        # Network read timeout
    write_timeout: "10s"       # Network write timeout
  consumer:
    min_bytes: 1024
    max_bytes: 1048576
    max_wait: "2s"
    start_offset: -1       # Latest messages for production

log_processing:
  batch_size: 100          # Higher batch size for production
  flush_interval: "5s"     # Faster processing for production
  retry_attempts: 3
  retry_delay: "2s"
  enable_metrics: true
  validation:
    default_log_level: "INFO"

alerting:
  default_time_window: "5m"
  default_threshold: 5     # Higher threshold for production (reduce noise)

notifications:
  enabled: true            # Enable all notifications
  slack:
    webhook_url: ""        # Set via SLACK_WEBHOOK_URL environment variable
    channel: "#alerts"     # Production alerts channel
    username: "Alert Engine (Production)"
    icon_emoji: ":warning:"
    timeout: "30s"
  
  templates:
    alert_message: |
      ðŸš¨ PRODUCTION Alert: {{.RuleName}}
      Service: {{.Service}}
      Namespace: {{.Namespace}}
      Level: {{.Level}}
      Count: {{.Count}} in {{.TimeWindow}}
      Message: {{.Message}}
    
    slack_alert_title: "{{.SeverityEmoji}} {{.RuleName}}"
    
    slack_alert_fields:
      - title: "Severity"
        value: "{{.Severity}}"
        short: true
      - title: "Namespace"
        value: "{{.Namespace}}"
        short: true
      - title: "Service"
        value: "{{.Service}}"
        short: true
      - title: "Pod"
        value: "{{.Pod}}"
        short: true
      - title: "Log Level"
        value: "{{.Level}}"
        short: true
      - title: "Count"
        value: "{{.Count}}"
        short: true

  severity:
    emojis:
      critical: "ðŸ”´"
      high: "ðŸŸ "
      medium: "ðŸŸ¡"
      low: "ðŸŸ¢"
      default: "âšª"
    
    colors:
      critical: "#ff0000"
      high: "#ff8000"
      medium: "#ffff00"
      low: "#00ff00"
      default: "#808080"

default_rules:
  enabled: true
  rules:
    - id: "production-error-alert"
      name: "Production - Application Error Alert"
      description: "Alert on application errors in production"
      enabled: true
      conditions:
        log_level: "ERROR"
        threshold: 5         # Higher threshold for production
        time_window: "5m"
        operator: "gte"
      actions:
        channel: "#alerts"
        severity: "high"

    - id: "production-critical-namespace-alert"
      name: "Production - Critical Namespace Alert"
      description: "Alert on errors in critical namespaces"
      enabled: true
      conditions:
        namespace: "kube-system|openshift-|default"  # Critical namespaces
        log_level: "ERROR"
        threshold: 3
        time_window: "3m"
        operator: "gte"
      actions:
        channel: "#alerts"
        severity: "critical"

# ============================================================================
# LOCAL DEVELOPMENT CONFIGURATION (Currently Commented Out)
# ============================================================================
# These configurations are actively used by the alert engine code for local development

# Server configuration (Currently Used)
# server:
#   host: "0.0.0.0"          # USED: Server bind host 
#   port: 8080               # USED: Server bind port

# Redis configuration (Partially Used)
# redis:
#   address: "localhost:6379"  # USED: Redis server address
#   password: ""               # USED: Redis password (empty for no auth)
#   cluster_mode: false        # USED: Enable Redis cluster mode

# Kafka configuration (Consumer Only - Currently Used)
# kafka:
#   brokers:
#     - "localhost:9092"      # USED: Kafka broker addresses
#   topic: "application-logs" # USED: Topic to consume logs from
#   group_id: "alert-engine-local-group"  # USED: Consumer group ID
#   consumer:
#     min_bytes: 1024         # USED: Minimum bytes per fetch
#     max_bytes: 1048576      # USED: Maximum bytes per fetch (1MB)
#     max_wait: "2s"          # USED: Maximum wait time for batch
#     start_offset: -1        # USED: Starting offset (-1 = latest)

# Log processing configuration (Currently Used)
# log_processing:
#   batch_size: 50            # USED: Logs processed per batch
#   flush_interval: "10s"     # USED: Processing interval
#   retry_attempts: 3         # USED: Number of retry attempts
#   retry_delay: "1s"         # USED: Delay between retries  
#   enable_metrics: true      # USED: Enable metrics collection
#   validation:
#     default_log_level: "INFO"  # USED: Default level for missing log levels

# Alert processing configuration (Partially Used)
# alerting:
#   default_time_window: "5m" # USED: Default evaluation window
#   default_threshold: 1      # USED: Default threshold count

# Notification settings (Currently Used)
# notifications:
#   # Slack notification configuration (Currently Used)
#   slack:
#     webhook_url: ""           # USED: Set via environment variable SLACK_WEBHOOK_URL
#     channel: "#test-mp-channel"  # USED: Default Slack channel
#     username: "Alert Engine (Hybrid)"  # USED: Bot username
#     icon_emoji: ":warning:"   # USED: Bot icon emoji
#     timeout: 30s              # USED: Notification timeout
#   
#   # Alert message templates (Currently Used)
#   templates:
#     alert_message: |          # USED: Main alert template
#       ðŸš¨ Alert: {{.RuleName}}
#       Service: {{.Service}}
#       Namespace: {{.Namespace}}
#       Level: {{.Level}}
#       Count: {{.Count}} in {{.TimeWindow}}
#       Message: {{.Message}}
#     
#     slack_alert_title: "{{.SeverityEmoji}} {{.RuleName}}"  # USED: Slack title template
#     
#     slack_alert_fields:       # USED: Slack field templates
#       - title: "Severity"
#         value: "{{.Severity}}"
#         short: true
#       - title: "Namespace" 
#         value: "{{.Namespace}}"
#         short: true
#       - title: "Service"
#         value: "{{.Service}}"
#         short: true
#       - title: "Pod"
#         value: "{{.Pod}}"
#         short: true
#       - title: "Log Level"
#         value: "{{.Level}}"
#         short: true
#       - title: "Count"
#         value: "{{.Count}}"
#         short: true

#   # Severity mappings (Currently Used)
#   severity:
#     emojis:                   # USED: Severity emoji mappings
#       critical: "ðŸ”´"
#       high: "ðŸŸ "
#       medium: "ðŸŸ¡"
#       low: "ðŸŸ¢"
#       default: "âšª"
#     
#     colors:                   # USED: Severity color mappings
#       critical: "#ff0000"
#       high: "#ff8000"
#       medium: "#ffff00"
#       low: "#00ff00"
#       default: "#808080"

# Default alert rules (Currently Used)
# default_rules:
#   enabled: true               # USED: Enable default rules
#   rules:
#     - id: "hybrid-test-error-alert"
#       name: "Hybrid Test - Application Error Alert"
#       description: "Alert on application errors (hybrid config)"
#       enabled: true
#       conditions:
#         log_level: "ERROR"
#         threshold: 1          # Using E2E's lower threshold for better sensitivity
#         time_window: "2m"     # Shorter window for testing
#         operator: "gte"       # Using E2E's operator
#       actions:
#         channel: "#test-mp-channel"
#         severity: "high"

#     - id: "hybrid-test-alert-engine-logs"
#       name: "Hybrid Test - Alert Engine Namespace Logs" 
#       description: "Alert on alert-engine namespace activity"
#       enabled: true
#       conditions:
#         namespace: "alert-engine"
#         log_level: "ERROR"
#         threshold: 1          # Very low threshold for testing
#         time_window: "1m"     # Short window for testing
#         operator: "gte"
#       actions:
#         channel: "#test-mp-channel"
#         severity: "medium"

#     - id: "hybrid-test-continuous-log-alerts"
#       name: "Hybrid Test - Continuous Log Generator Alerts"
#       description: "Alert on continuous log generator errors"
#       enabled: true
#       conditions:
#         service: "continuous-log-generator"
#         log_level: "ERROR"
#         threshold: 1          # Lower threshold from E2E
#         time_window: "3m"
#         operator: "gte"
#       actions:
#         channel: "#test-mp-channel"
#         severity: "medium"

# ============================================================================
# FUTURE CONSIDERATIONS - NOT CURRENTLY IMPLEMENTED
# ============================================================================
# These configurations are defined but not yet used by the alert engine code
# Implementation of these features is planned for future releases

# Extended Server configuration (Future Consideration)
# server:
#   address: ":8080"          # Future: Alternative to host:port format
#   read_timeout: "30s"       # Future: HTTP read timeout
#   write_timeout: "30s"      # Future: HTTP write timeout  
#   idle_timeout: "60s"       # Future: HTTP idle timeout

# Extended Redis configuration (Future Consideration)
# redis:
#   database: 0               # Future: Redis database number (0-15)
#   max_retries: 3            # Future: Maximum retry attempts
#   pool_size: 10             # Future: Connection pool size
#   min_idle_conns: 5         # Future: Minimum idle connections
#   dial_timeout: "10s"       # Future: Connection establishment timeout
#   read_timeout: "5s"        # Future: Read operation timeout
#   write_timeout: "5s"       # Future: Write operation timeout
#   pool_timeout: "10s"       # Future: Pool acquisition timeout
#   idle_timeout: "5m"        # Future: Idle connection timeout

# Kafka Producer configuration (Future Consideration)
# kafka:
#   producer:
#     acks: "all"             # Future: Producer acknowledgment settings
#     retries: 3              # Future: Producer retry attempts
#     batch_size: 16384       # Future: Producer batch size
#     linger_ms: 10           # Future: Producer linger time
#     buffer_memory: 33554432 # Future: Producer buffer memory
#     compression_type: "snappy"  # Future: Producer compression

# Extended Log processing configuration (Future Consideration)
# log_processing:
#   enabled: true             # Future: Master switch for log processing
#   max_message_size: 1048576 # Future: Maximum log message size (1MB)
#   validation:
#     require_timestamp: true  # Future: Require timestamp field
#     require_level: true     # Future: Require log level field
#     require_message: true   # Future: Require message field
#     require_namespace: false # Future: Require namespace field

# Extended Alert processing configuration (Future Consideration)
# alerting:
#   enabled: true             # Future: Master switch for alert processing
#   evaluation_interval: 10s  # Future: Alert evaluation frequency
#   max_concurrent_evaluations: 10  # Future: Concurrent evaluation limit
#   rule_cache_ttl: 300s      # Future: Rule cache time-to-live
#   alert_history_retention: 7200s  # Future: Alert history retention
#   batch_size: 50            # Future: Alert processing batch size
#   flush_interval: "10s"     # Future: Alert processing flush interval
#   max_rules: 1000           # Future: Maximum number of alert rules
#   cleanup_interval: "1h"    # Future: State cleanup interval

# Extended Notification settings (Future Consideration)
# notifications:
#   enabled: true             # Future: Master switch for notifications
#   max_retries: 3            # Future: Maximum retry attempts
#   retry_delay: "5s"         # Future: Delay between retries
#   timeout: "30s"            # Future: Notification timeout
#   rate_limit_per_min: 60    # Future: Rate limiting per minute
#   batch_size: 5             # Future: Notifications per batch
#   batch_delay: "2s"         # Future: Delay between batches
#   enable_deduplication: true # Future: Enable duplicate detection
#   deduplication_window: "5m" # Future: Deduplication time window
#   slack:
#     retry_attempts: 3       # Future: Slack-specific retry attempts
#     retry_delay: 2s         # Future: Slack-specific retry delay

# Logging configuration (Future Consideration)
# logging:
#   level: "info"             # Future: Application log level
#   format: "json"            # Future: Log format (text, json)
#   output: "stdout"          # Future: Log output destination
#   file:
#     path: "/tmp/alert-engine-local.log"  # Future: Log file path
#     max_size: "10MB"        # Future: Log file size limit
#     max_backups: 3          # Future: Number of backup files
#     max_age: "7d"           # Future: Maximum file age
#     compress: true          # Future: Compress rotated files

# Monitoring and metrics (Future Consideration)
# monitoring:
#   enabled: true             # Future: Enable monitoring features
#   metrics_port: 8081        # Future: Metrics server port
#   health_check_interval: "30s"  # Future: Health check frequency
#   log_level: "info"         # Future: Monitoring log level
#   enable_pprof: true        # Future: Enable Go profiling

# Enhanced metrics configuration (Future Consideration)
# metrics:
#   enabled: true             # Future: Enable metrics collection
#   path: "/metrics"          # Future: Metrics endpoint path
#   port: 9090                # Future: Metrics server port

# Enhanced health configuration (Future Consideration)
# health:
#   path: "/health"           # Future: Health check endpoint path
#   timeout: 5s               # Future: Health check timeout

# Security configuration (Future Consideration)
# security:
#   enable_cors: true         # Future: Enable CORS headers
#   cors_origins: ["*"]       # Future: Allowed CORS origins
#   enable_auth: false        # Future: Enable API authentication
#   api_key: ""               # Future: API key for authentication

# Performance tuning (Future Consideration)
# performance:
#   max_concurrent_rules: 50  # Future: Maximum concurrent rule evaluations
#   rule_evaluation_timeout: "2s"  # Future: Rule evaluation timeout
#   max_memory_usage: "256Mi" # Future: Memory usage limit
#   gc_percentage: 100        # Future: Go garbage collection target

# Environment-specific overrides (Future Consideration)
# env_overrides:
#   development:              # Future: Development environment settings
#     logging:
#       level: "debug"
#     monitoring:
#       enable_pprof: true
#     alerting:
#       default_threshold: 1
#   
#   production:               # Future: Production environment settings
#     logging:
#       level: "warn"
#     performance:
#       max_memory_usage: "1Gi"
#     kafka:
#       brokers:
#         - "alert-kafka-cluster-kafka-bootstrap.amq-streams-kafka.svc.cluster.local:9092"
#     redis:
#       address: "redis-cluster-access.redis-cluster.svc.cluster.local:6379"
#     
#   test:                     # Future: Test environment settings
#     logging:
#       level: "error"
#     kafka:
#       topic: "test-application-logs"
#     redis:
#       database: 1

# E2E Testing specific configuration (Future Consideration)
# e2e:
#   test_mode: false          # Future: Enable E2E test mode
#   log_retention: 3600s      # Future: Log retention for testing
#   alert_retention: 1800s    # Future: Alert retention for testing
#   cleanup_interval: 300s    # Future: Cleanup interval for testing

# Consumer defaults (Future Consideration)
# consumer_defaults:
#   brokers:
#     - "localhost:9092"      # Future: Default broker list
#   topic: "application-logs" # Future: Default topic
#   group_id: "alert-engine-local-group"  # Future: Default group ID
#   min_bytes: 1024           # Future: Default minimum bytes
#   max_bytes: 1048576        # Future: Default maximum bytes
#   max_wait: "2s"            # Future: Default max wait time
#   start_offset: -1          # Future: Default start offset 