# Alert Engine Configuration
# Phase 0: Foundation & Proof of Concept

# Server configuration
server:
  address: ":8080"
  read_timeout: "30s"
  write_timeout: "30s"
  idle_timeout: "60s"

# Redis configuration for state storage
redis:
  address: "localhost:6379"
  password: ""
  database: 0
  max_retries: 3
  pool_size: 10
  min_idle_conns: 5
  dial_timeout: "5s"
  read_timeout: "3s"
  write_timeout: "3s"
  pool_timeout: "4s"
  idle_timeout: "5m"

# Kafka configuration for log consumption
kafka:
  brokers:
    - "localhost:9092"
  topic: "application-logs"
  group_id: "log-monitoring-group"
  consumer:
    min_bytes: 10240        # 10KB
    max_bytes: 10485760     # 10MB
    max_wait: "1s"
    start_offset: -1        # Latest offset
  producer:
    batch_size: 100
    batch_timeout: "1s"

# Slack notification configuration
slack:
  webhook_url: ""           # Set via environment variable SLACK_WEBHOOK_URL
  channel: "#alerts"
  username: "Alert Engine"
  icon_emoji: ":warning:"
  timeout: "30s"

# Notification settings
notifications:
  enabled: true
  max_retries: 3
  retry_delay: "5s"
  timeout: "30s"
  rate_limit_per_min: 60
  batch_size: 10
  batch_delay: "1s"
  enable_deduplication: true
  deduplication_window: "5m"

# Alert processing configuration
alerting:
  enabled: true
  batch_size: 100
  flush_interval: "5s"
  max_rules: 1000
  default_time_window: "5m"
  default_threshold: 5
  cleanup_interval: "1h"

# Log processing configuration
log_processing:
  enabled: true
  batch_size: 100
  flush_interval: "5s"
  max_message_size: 1048576  # 1MB
  validation:
    require_timestamp: true
    require_level: true
    require_message: true
    require_namespace: true

# Monitoring and metrics
monitoring:
  enabled: true
  metrics_port: 8081
  health_check_interval: "30s"
  log_level: "info"         # debug, info, warn, error
  enable_pprof: false       # Enable profiling endpoints

# Default alert rules (loaded on startup if no rules exist)
default_rules:
  enabled: true
  rules:
    - id: "default-error-alert"
      name: "Application Error Alert"
      description: "Alert on application errors"
      enabled: true
      conditions:
        log_level: "ERROR"
        threshold: 5
        time_window: "5m"
        operator: "gt"
      actions:
        channel: "#alerts"
        severity: "high"

    - id: "default-database-alert"  
      name: "Database Connection Issues"
      description: "Alert on database connection problems"
      enabled: true
      conditions:
        log_level: "ERROR"
        keywords: ["database", "connection", "failed"]
        threshold: 3
        time_window: "2m"
        operator: "gt"
      actions:
        channel: "#infrastructure"
        severity: "critical"

    - id: "default-memory-warning"
      name: "High Memory Usage Warning"
      description: "Alert on high memory usage warnings"
      enabled: true
      conditions:
        log_level: "WARN"
        keywords: ["memory", "usage", "high"]
        threshold: 10
        time_window: "10m"
        operator: "gt"
      actions:
        channel: "#monitoring"
        severity: "medium"

# Security configuration
security:
  enable_cors: true
  cors_origins: ["*"]
  enable_auth: false        # Disable for Phase 0
  api_key: ""              # Set via environment variable API_KEY

# Performance tuning
performance:
  max_concurrent_rules: 100
  rule_evaluation_timeout: "1s"
  max_memory_usage: "512Mi"
  gc_percentage: 100

# Logging configuration
logging:
  level: "info"
  format: "json"           # json or text
  output: "stdout"         # stdout, stderr, or file path
  file:
    path: "/var/log/alert-engine.log"
    max_size: "100MB"
    max_backups: 5
    max_age: "30d"
    compress: true

# Environment-specific overrides
# These can be overridden by environment variables
env_overrides:
  development:
    logging:
      level: "debug"
    monitoring:
      enable_pprof: true
  
  production:
    logging:
      level: "warn"
    performance:
      max_memory_usage: "1Gi"
    
  test:
    logging:
      level: "error"
    kafka:
      topic: "test-application-logs"
    redis:
      database: 1 