apiVersion: v1
kind: ServiceAccount
metadata:
  name: mock-log-generator
  namespace: mock-logs
  labels:
    app: mock-log-generator
    component: log-generator
    version: v1.0.0
automountServiceAccountToken: true

---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: mock-log-generator-role
  namespace: mock-logs
  labels:
    app: mock-log-generator
    component: log-generator
rules:
# Allow reading ConfigMaps and Secrets in the same namespace
- apiGroups: [""]
  resources: ["configmaps", "secrets"]
  verbs: ["get", "list", "watch"]
# Allow reading pod information for metadata
- apiGroups: [""]
  resources: ["pods"]
  verbs: ["get", "list", "watch"]
  resourceNames: []
# Allow creating events for monitoring/debugging
- apiGroups: [""]
  resources: ["events"]
  verbs: ["create", "patch"]

---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: mock-log-generator-rolebinding
  namespace: mock-logs
  labels:
    app: mock-log-generator
    component: log-generator
subjects:
- kind: ServiceAccount
  name: mock-log-generator
  namespace: mock-logs
roleRef:
  kind: Role
  name: mock-log-generator-role
  apiGroup: rbac.authorization.k8s.io

---
# ClusterRole for reading node information (for hostname/node metadata)
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: mock-log-generator-cluster-role
  labels:
    app: mock-log-generator
    component: log-generator
rules:
- apiGroups: [""]
  resources: ["nodes"]
  verbs: ["get", "list"]

---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: mock-log-generator-cluster-rolebinding
  labels:
    app: mock-log-generator
    component: log-generator
subjects:
- kind: ServiceAccount
  name: mock-log-generator
  namespace: mock-logs
roleRef:
  kind: ClusterRole
  name: mock-log-generator-cluster-role
  apiGroup: rbac.authorization.k8s.io 