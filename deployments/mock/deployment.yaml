apiVersion: apps/v1
kind: Deployment
metadata:
  name: mock-log-generator
  namespace: mock-logs
  labels:
    app: mock-log-generator
    component: log-generator
    version: v1.0.0
spec:
  replicas: 1
  selector:
    matchLabels:
      app: mock-log-generator
  template:
    metadata:
      labels:
        app: mock-log-generator
        component: log-generator
        version: v1.0.0
      annotations:
        prometheus.io/scrape: "false"  # No metrics endpoint for simple log generator
    spec:
      serviceAccountName: mock-log-generator
      securityContext:
        runAsNonRoot: true
        # OpenShift will assign appropriate UID/GID from namespace range
      containers:
      - name: mock-log-generator
        image: quay.io/mpaulgreen/mock-log-generator:latest  # Update with your registry
        imagePullPolicy: Always
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
          readOnlyRootFilesystem: true
          runAsNonRoot: true
          # OpenShift will assign appropriate UID from namespace range
        env:
        # Configuration from ConfigMap
        - name: LOG_MODE
          valueFrom:
            configMapKeyRef:
              name: mock-log-generator-config
              key: LOG_MODE
        - name: LOG_LEVEL
          valueFrom:
            configMapKeyRef:
              name: mock-log-generator-config
              key: LOG_LEVEL
        - name: LOG_GENERATION_INTERVAL
          valueFrom:
            configMapKeyRef:
              name: mock-log-generator-config
              key: LOG_GENERATION_INTERVAL
        - name: BURST_INTERVAL
          valueFrom:
            configMapKeyRef:
              name: mock-log-generator-config
              key: BURST_INTERVAL
        - name: CLUSTER_NAME
          valueFrom:
            configMapKeyRef:
              name: mock-log-generator-config
              key: CLUSTER_NAME
        # OpenShift metadata from downward API
        - name: POD_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: NODE_NAME
          valueFrom:
            fieldRef:
              fieldPath: spec.nodeName
        resources:
          requests:
            cpu: 50m
            memory: 64Mi
          limits:
            cpu: 200m
            memory: 128Mi
        # Simple readiness probe - just check if process is running
        readinessProbe:
          exec:
            command:
            - /bin/sh
            - -c
            - "pgrep -f mock_log_generator.py"
          initialDelaySeconds: 5
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3
        # Simple liveness probe - just check if process is running  
        livenessProbe:
          exec:
            command:
            - /bin/sh
            - -c
            - "pgrep -f mock_log_generator.py"
          initialDelaySeconds: 10
          periodSeconds: 30
          timeoutSeconds: 5
          failureThreshold: 3
        volumeMounts:
        - name: tmp
          mountPath: /tmp
      volumes:
      - name: tmp
        emptyDir: {}
      restartPolicy: Always
      terminationGracePeriodSeconds: 30 