apiVersion: v1
kind: Service
metadata:
  name: alert-engine
  namespace: log-monitoring
  labels:
    app: alert-engine
    component: alerting
  annotations:
    prometheus.io/scrape: "true"
    prometheus.io/port: "8081"
    prometheus.io/path: "/metrics"
spec:
  type: ClusterIP
  ports:
  - name: http
    port: 8080
    targetPort: 8080
    protocol: TCP
  - name: metrics
    port: 8081
    targetPort: 8081
    protocol: TCP
  selector:
    app: alert-engine

---
apiVersion: v1
kind: Service
metadata:
  name: alert-engine-metrics
  namespace: log-monitoring
  labels:
    app: alert-engine
    component: alerting
    service-type: metrics
  annotations:
    prometheus.io/scrape: "true"
    prometheus.io/port: "8081"
    prometheus.io/path: "/metrics"
spec:
  type: ClusterIP
  ports:
  - name: metrics
    port: 8081
    targetPort: 8081
    protocol: TCP
  selector:
    app: alert-engine

---
apiVersion: route.openshift.io/v1
kind: Route
metadata:
  name: alert-engine
  namespace: log-monitoring
  labels:
    app: alert-engine
    component: alerting
spec:
  to:
    kind: Service
    name: alert-engine
    weight: 100
  port:
    targetPort: http
  tls:
    termination: edge
    insecureEdgeTerminationPolicy: Redirect
  wildcardPolicy: None

---
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: alert-engine-network-policy
  namespace: log-monitoring
  labels:
    app: alert-engine
spec:
  podSelector:
    matchLabels:
      app: alert-engine
  policyTypes:
  - Ingress
  - Egress
  ingress:
  - from:
    - namespaceSelector:
        matchLabels:
          name: openshift-monitoring
    - namespaceSelector:
        matchLabels:
          name: log-monitoring
    - podSelector:
        matchLabels:
          app: alert-engine
    ports:
    - protocol: TCP
      port: 8080
    - protocol: TCP
      port: 8081
  egress:
  - to:
    - namespaceSelector:
        matchLabels:
          name: log-monitoring
    ports:
    - protocol: TCP
      port: 6379  # Redis
    - protocol: TCP
      port: 9092  # Kafka
  - to: []  # Allow all outbound for Slack webhooks and DNS
    ports:
    - protocol: TCP
      port: 443
    - protocol: TCP
      port: 53
    - protocol: UDP
      port: 53

---
apiVersion: monitoring.coreos.com/v1
kind: ServiceMonitor
metadata:
  name: alert-engine
  namespace: log-monitoring
  labels:
    app: alert-engine
    component: alerting
spec:
  selector:
    matchLabels:
      app: alert-engine
      service-type: metrics
  endpoints:
  - port: metrics
    interval: 30s
    path: /metrics
    scheme: http

---
apiVersion: v1
kind: Service
metadata:
  name: alert-engine-headless
  namespace: log-monitoring
  labels:
    app: alert-engine
    component: alerting
    service-type: headless
spec:
  type: ClusterIP
  clusterIP: None
  ports:
  - name: http
    port: 8080
    targetPort: 8080
    protocol: TCP
  selector:
    app: alert-engine

---
apiVersion: v1
kind: Endpoints
metadata:
  name: alert-engine-external
  namespace: log-monitoring
  labels:
    app: alert-engine
    component: alerting
subsets:
- addresses:
  - ip: 10.0.0.1  # External load balancer IP (if needed)
  ports:
  - name: http
    port: 8080
    protocol: TCP 