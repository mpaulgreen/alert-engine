apiVersion: apps/v1
kind: Deployment
metadata:
  name: alert-engine
  namespace: alert-engine
  labels:
    app.kubernetes.io/name: alert-engine
    app.kubernetes.io/component: application
    app.kubernetes.io/part-of: log-monitoring-platform
    app.kubernetes.io/version: "1.0.0"
spec:
  replicas: 2 # High availability with 2 replicas
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0 # Ensure zero downtime
  selector:
    matchLabels:
      app.kubernetes.io/name: alert-engine
      app.kubernetes.io/component: application
  template:
    metadata:
      labels:
        app.kubernetes.io/name: alert-engine
        app.kubernetes.io/component: application
        app.kubernetes.io/part-of: log-monitoring-platform
        app.kubernetes.io/version: "1.0.0"
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "8080"
        prometheus.io/path: "/metrics"
    spec:
      serviceAccountName: alert-engine
      securityContext:
        runAsNonRoot: true
        seccompProfile:
          type: RuntimeDefault
      containers:
        - name: alert-engine
          # TODO: Replace with your actual alert engine image
          image: quay.io/mpaulgreen/alert-engine:latest
          imagePullPolicy: Always
          ports:
            - name: http
              containerPort: 8080
              protocol: TCP
          env:
            - name: CONFIG_PATH
              value: "/etc/alert-engine/config.yaml"
            - name: SLACK_WEBHOOK_URL
              valueFrom:
                secretKeyRef:
                  name: alert-engine-secrets
                  key: SLACK_WEBHOOK_URL
                  optional: false
            - name: LOG_LEVEL
              value: "INFO"
            - name: ENVIRONMENT
              value: "production"
          volumeMounts:
            - name: config
              mountPath: /etc/alert-engine
              readOnly: true
          resources:
            requests:
              cpu: 100m
              memory: 128Mi
            limits:
              cpu: 500m
              memory: 512Mi
          livenessProbe:
            httpGet:
              path: /api/v1/health
              port: http
            initialDelaySeconds: 60
            periodSeconds: 30
            timeoutSeconds: 10
            failureThreshold: 5
          readinessProbe:
            httpGet:
              path: /api/v1/health
              port: http
            initialDelaySeconds: 15
            periodSeconds: 15
            timeoutSeconds: 10
            failureThreshold: 5
          securityContext:
            allowPrivilegeEscalation: false
            readOnlyRootFilesystem: true
            runAsNonRoot: true
            capabilities:
              drop:
                - ALL
      volumes:
        - name: config
          configMap:
            name: alert-engine-config
            defaultMode: 0644
      restartPolicy: Always
      terminationGracePeriodSeconds: 30
      dnsPolicy: ClusterFirst
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - weight: 100
              podAffinityTerm:
                labelSelector:
                  matchExpressions:
                    - key: app.kubernetes.io/name
                      operator: In
                      values:
                        - alert-engine
                topologyKey: kubernetes.io/hostname
